# Run docker-compose build
# Run docker-compose up
# Live long and prosper

version: '2'

services:

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    volumes:
      - ./dist:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"

    networks:
      - app-network

  nodes:
    container_name: nodeapp
    image: nodeapp
    build:
      context: ./microservices/node
      dockerfile: .docker/node.development.dockerfile
    volumes:
      - ./microservices/node:/var/www/angularnoderestfulservice
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on: 
      - mongodb
    networks:
      - app-network
      
  #No authentication is provided here - JUST A DEMO! That would absolutely
  #be needed for a "real" application
  mongodb:
    container_name: mongodb
    image: mongo
    networks:
      - app-network

  # springboot:
  #   container_name: 'springboot'
  #   image: 'springboot'
  #   build:
  #     context: ./microservices/springboot
  #     dockerfile: .docker/springboot.development.dockerfile
  #   volumes:
  #     - ./microservices/springboot:/var/www/springboot
  #   ports:
  #    - "5000:5000"
  #   depends_on:
  #    - "mysql"
  #   networks:
  #     - app-network

  # mysql:
  #   container_name: 'mysql'
  #   image: mysql
  #   environment:
  #     MYSQL_PASSWORD: password
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge